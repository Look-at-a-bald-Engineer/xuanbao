打开cmd，输入git；
在所需要存放东西的文件夹下点击shift+鼠标右键，命令指示，git clone +ssh地址.

如果没有ssh密钥怎么办？
github点击设置--ssh和gpg密钥--生成密钥
  生成新的SSH密钥
打开Git Bash。

粘贴以下文本，替换为您的GitHub电子邮件地址。

$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

将SSH私钥添加到ssh-agent。如果您使用其他名称创建密钥，或者要添加具有其他名称的现有密钥，请使用私有密钥文件的名称替换命令中的id_rsa。

$  ~/.ssh/id_rsa

将SSH密钥复制到剪贴板。

如果您的SSH密钥文件的名称与示例代码的名称不同，请修改文件名以匹配当前设置。复制密钥时，请勿添加任何换行符或空格。

$  ~/.ssh/id_rsa.pub

添加：设置--ssh和gpg密钥--单击“ 新建SSH密钥”或“ 添加SSH密钥”。在“标题”字段中，为新密钥添加一个描述性标签。例如，如果您使用的是个人Mac，则可以将此键称为“个人MacBook Air”。

将您的密钥粘贴到“密钥”字段中。

注：密钥在.ssh文件中；文件名叫id_rsa.pub；用记事本打开。


复制克隆到本地磁盘
git clone+ssh地址，就能将GitHub仓库文件克隆到你的本地磁盘上

（git log查看日志）


写的东西推送到GitHub仓库中：
找到目录 git status查看当前状态
git add 文件名----git commit -m "文件名 commit"将文件传送给GitHub仓库
会提示不知道是谁，这时候你就应该登陆一下你的邮箱和用户名
$ git config --global user.name GitHub的名字----$ git config --global user.email "邮箱地址"
然后再git commit -m "文件名 commit"；将文件上传
git push 将文件上传

git status检查上传内容

删除文件：
git commit -a -m "文件名"
git push

团队开发：
创建分支：git checkout "分支名"
设置一个远端分支 git push --set-upstream orgin "分支名"

另一个人：git checkout -b "用户名" 
     git add .添加 gitcommit -m "文件名"
     git push --set-upstream orgin "用户名"

git checkout master 回到主分支
git pull 将所有文件更新下来
git merge "用户名"

后续继续更新




