git初始化仓库
git init
配置用户名和邮箱
git config --global user.name "name"
git config --global user.email "email"
将代码储存到.git仓库中
将代码放入暂存区
git add ./readme.me		将指定文件放到暂存区
git add ./		将所有修改和新建的文件放到暂存区
将代码放入版本库
git commit --m "说明"	将暂存区的代码提交到版本库
git commit -all -m "说明"	将当前工作区和暂存区的所有文件提交到版本库
查看当前状态
git status
git中的忽略文件
.gitignore 在这个文件中可以设置要忽略的文件或目录，被忽略的文件或目录不会提交到仓库
在.gitignore 中可以书写要忽略的文件或目录，以 / 开头，一行书写一个路径，这些路径所对应的文件或目录都会被忽略，不会提交到仓库
写法
/.idea		会忽略.idea文件
/js		会忽略js目录下的所有文件
/js/*.js		会忽略js目录下的所有js文件
查看日志
git log		查看历史提交的日志
git log --online		查看简介版的日志
回退到指定的版本
git reset --hard HEAD~0		回退到上一次提交代码的状态
git reset --hard HEAD~1		回退到上上次提交代码的状态
git reset --hard HEAD [版本号]		回退到指定版本号
git reflog		可以查看每一次切换版本的记录以及所有的版本号
分支
默认为主分支master
创建分支
git breach dev		创建一个叫dev的分支
查看当前有哪些分支
git branch
切换分支
git checkout dev		切换为dev分支
合并分支
git merge dev		回到master分支，执行合并命令，进行合并
如果有冲突，还需要手动处理，处理后再提交一次
删除分支
git breanch -d dev		回到master分支，执行删除分支命令，删除dev分支
github远程仓库
创建SSH Key，在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
$ ssh-keygen -t rsa -C "youremail@example.com"	邮箱换成你自己的，一路回车
登陆GitHub，打开“settings”，“SSH Keys”页面：
然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容，点击 Add SSH key
关联仓库，在github上创建一个名叫test的仓库，在本地test仓库下输入：
git remote add origin git@github.com:michaelliao/test.git	michaelliao换成自己的github账号
git push -u origin master		第一次将本地文件推送到github
git push origin master		以后都可以使用这个命令推送
从远程仓库克隆
克隆已存在的仓库
git clone git@github.com:michaelliao/gitskills.git		将地址和仓库都换成你的
从仓库拉下改变的代码
git pull
多人协作时，最好先git pull，再给git push 这样有冲突，也好解决。